import os
import asyncio
from fastapi import FastAPI, Request, Response
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# === ENV ===
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_PATH = "/webhook"
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET", "supersecret")  # –º–æ–∂–µ—à—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ Render
PORT = int(os.getenv("PORT", 8080))

if not TOKEN:
    raise RuntimeError("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# === Aiogram core ===
bot = Bot(token=TOKEN)
dp = Dispatcher()

# === Handlers ===
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç—É—Ä-–±–æ—Ç ü§ñ\n–ü–∏—à–∏ /tours —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ç—É—Ä–æ–≤.")

@dp.message(Command("tours"))
async def tours_cmd(message: types.Message):
    # –ó–∞–≥–ª—É—à–∫–∞ ‚Äî –ø–æ–∑–∂–µ –ø–æ–¥–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Collector
    tours = [
        "üáπüá∑ –ê–Ω—Ç–∞–ª–∏—è ‚Äî 500$ –∑–∞ 7 –Ω–æ—á–µ–π",
        "üáπüá≠ –ü—Ö—É–∫–µ—Ç ‚Äî 800$ –∑–∞ 10 –Ω–æ—á–µ–π",
        "üá™üá¨ –®–∞—Ä–º-—ç–ª—å-–®–µ–π—Ö ‚Äî 450$ –∑–∞ 7 –Ω–æ—á–µ–π"
    ]
    await message.answer("\n".join(tours))

# === FastAPI app ===
app = FastAPI()

@app.get("/")
async def root():
    return {"status": "ok", "service": "tour-bot"}

@app.on_event("startup")
async def on_startup():
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL –¥–ª—è –≤–µ–±—Ö—É–∫–∞ –Ω–∞ Render
    # Render —Å–∞–º –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç RENDER_EXTERNAL_URL
    base = os.getenv("RENDER_EXTERNAL_URL")
    if not base:
        # fallback: –ª–æ–∫–∞–ª—å–Ω–æ / –Ω–∞ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
        base = os.getenv("PUBLIC_URL", f"http://0.0.0.0:{PORT}")
    webhook_url = f"{base}{WEBHOOK_PATH}"
    # –ü–µ—Ä–µ—Å—Ç–∞–≤–∏–º –≤–µ–±—Ö—É–∫ (–ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Å—Ç–∞—Ä—ã–π, —ç—Ç–æ –Ω–æ—Ä–º)
    await bot.set_webhook(url=webhook_url, secret_token=WEBHOOK_SECRET)
    print(f"‚úÖ Webhook set: {webhook_url}")

@app.post(WEBHOOK_PATH)
async def telegram_webhook(request: Request):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç X-Telegram-Bot-Api-Secret-Token
    if request.headers.get("X-Telegram-Bot-Api-Secret-Token") != WEBHOOK_SECRET:
        return Response(status_code=403)
    data = await request.json()
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º Update –∏ –æ—Ç–¥–∞—ë–º –µ–≥–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
    update = types.Update.model_validate(data)
    await dp.feed_update(bot, update)
    return {"ok": True}
