# handlers/settings.py
from aiogram import Router, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message

router = Router(name="settings")

LANGS = {"ru": "üá∑üá∫ –†—É—Å—Å–∫–∏–π", "uz": "üá∫üáø O‚Äòzbekcha", "en": "üá¨üáß English"}

def lang_keyboard(current: str | None = None) -> InlineKeyboardMarkup:
    rows = []
    for code, title in LANGS.items():
        mark = " ‚úÖ" if code == current else ""
        rows.append([InlineKeyboardButton(text=title + mark, callback_data=f"lang:{code}")])
    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:settings")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

# --- –ó–∞–≥–ª—É—à–∫–∏: –ø–æ—Ç–æ–º –ø–æ–¥–∫–ª—é—á–∏–º –ë–î
def get_user_lang(user_id: int) -> str | None: ...
def save_user_lang(user_id: int, code: str) -> None: ...

async def entry_settings(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üåê –í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫", callback_data="open:lang")],
    ])
    await message.answer("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", reply_markup=kb)

@router.callback_query(F.data == "open:lang")
async def open_lang(cb: CallbackQuery):
    current = get_user_lang(cb.from_user.id)
    await cb.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=lang_keyboard(current))
    await cb.answer()

@router.callback_query(F.data.startswith("lang:"))
async def set_lang(cb: CallbackQuery):
    code = cb.data.split(":")[1]
    save_user_lang(cb.from_user.id, code)
    await cb.answer("–Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω ‚úÖ", show_alert=True)
    await cb.message.edit_reply_markup(reply_markup=lang_keyboard(code))

@router.callback_query(F.data == "back:settings")
async def back_settings(cb: CallbackQuery):
    await entry_settings(cb.message)
    await cb.answer()
